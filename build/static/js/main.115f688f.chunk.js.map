{"version":3,"sources":["util/Spotify.js","Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["accessToken","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","term","search","bind","assertThisInitialized","handleTermChange","onSearch","event","setState","target","value","react_default","a","createElement","className","placeholder","onChange","onClick","React","Component","Track","addTrack","removeTrack","onAdd","track","onRemove","isRemoval","name","artist","album","renderAction","TrackList","tracks","map","Components_Track_Track","Key","id","SearchResults","Components_TrackList_TrackList","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","concat","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","push","filter","duplicateTrack","_this2","_this3","Components_SearchBar_SearchBar","Components_SearchResults_SearchResults","Components_Playlist_Playlist","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","Components_App_App","document","getElementById","URL","process","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.115f688f.chunk.js","sourcesContent":["const clientId = '54e1ade936fd474b83a6cbe61253722b'; \r\nconst redirectUri = \"http://mighty-person.surge.sh\"; \r\n\r\nlet accessToken;\r\n\r\nconst Spotify = {\r\n  getAccessToken() {\r\n    if (accessToken) {\r\n      return accessToken;\r\n    }\r\n\r\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\r\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\r\n    if (accessTokenMatch && expiresInMatch) {\r\n      accessToken = accessTokenMatch[1];\r\n      const expiresIn = Number(expiresInMatch[1]);\r\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\r\n      window.history.pushState('Access Token', null, '/'); \r\n      return accessToken;\r\n    } else {\r\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\r\n      window.location = accessUrl;\r\n    }\r\n  },\r\n\r\n  search(term) {\r\n    const accessToken = Spotify.getAccessToken();\r\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\r\n      headers: {Authorization: `Bearer ${accessToken}`}\r\n    }).then(response => {\r\n      return response.json();\r\n    }).then(jsonResponse => {\r\n      if (!jsonResponse.tracks) {\r\n        return [];\r\n      }\r\n      return jsonResponse.tracks.items.map(track => ({\r\n        id: track.id,\r\n        name: track.name,\r\n        artist: track.artists[0].name,\r\n        album: track.album.name,\r\n        uri: track.uri\r\n      }));\r\n    });\r\n  },\r\n\r\n  savePlaylist(name, trackUris) {\r\n    if (!name || !trackUris.length) {\r\n      return;\r\n    }\r\n\r\n    const accessToken = Spotify.getAccessToken();\r\n    const headers = { Authorization: `Bearer ${accessToken}` };\r\n    let userId;\r\n\r\n    return fetch('https://api.spotify.com/v1/me', {headers: headers}\r\n    ).then(response => response.json()\r\n    ).then(jsonResponse => {\r\n      userId = jsonResponse.id;\r\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`, {\r\n        headers: headers,\r\n        method: 'POST',\r\n        body: JSON.stringify({name: name})\r\n      }).then(response => response.json()\r\n      ).then(jsonResponse => {\r\n        const playlistId = jsonResponse.id;\r\n        return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\r\n          headers: headers,\r\n          method: 'POST',\r\n          body: JSON.stringify({uris: trackUris})\r\n        });\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\nexport default Spotify;","import React from 'react';\r\nimport './SearchBar.css';\r\n\r\nclass SearchBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      term: ''\r\n    };\r\n\r\n    this.search = this.search.bind(this);\r\n    this.handleTermChange = this.handleTermChange.bind(this);\r\n  }\r\n\r\n  search() {\r\n    this.props.onSearch(this.state.term);\r\n  }\r\n\r\n  handleTermChange(event) {\r\n    this.setState({term: event.target.value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"SearchBar\" >\r\n    <input placeholder=\"Enter A Song, Album, or Artist\" onChange={this.handleTermChange} />\r\n    <a onClick={this.search}>SEARCH</a>\r\n  </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default SearchBar;","import React from 'react';\r\nimport './Track.css';\r\n\r\nclass Track extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.addTrack = this.addTrack.bind(this);\r\n    this.removeTrack = this.removeTrack.bind(this); \r\n  }\r\n\r\n  addTrack(event) {\r\n    this.props.onAdd(this.props.track);\r\n  }\r\n\r\n    removeTrack(event) {\r\n      this.props.onRemove(this.props.track);\r\n    }\r\n  \r\n    renderAction() {\r\n      if (this.props.isRemoval) {\r\n        return <a className=\"Track-action\" onClick={this.removeTrack}>-</a>\r\n      }\r\n      return <a className=\"Track-action\" onClick={this.addTrack}> + </a>;\r\n    }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"Track\">\r\n    <div className=\"Track-information\">\r\n      <h3>{this.props.track.name}</h3>\r\n      <p>{this.props.track.artist} | {this.props.track.album}</p>\r\n    </div>\r\n    {this.renderAction()}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Track;","import React from 'react';\r\nimport './TrackList.css';\r\n\r\nimport Track from '../Track/Track';\r\n\r\nclass TrackList extends React.Component {\r\n render() {\r\n    return (\r\n      <div className=\"TrackList\"> {\r\n          this.props.tracks.map(track => {\r\n            return <Track track={track} \r\n                        Key={track.id}\r\n                        onAdd={this.props.onAdd}\r\n                        isRemoval={this.props.isRemoval} \r\n                        onRemove={this.onRemove} />\r\n          })  \r\n        }\r\n        </div>\r\n      );\r\n    }    \r\n}\r\n\r\nexport default TrackList;","import React from 'react';\r\nimport './SearchResults.css';\r\nimport TrackList from '../TrackList/TrackList';\r\n\r\nclass SearchResults extends React.Component {\r\n  render() {\r\n    return (\r\n    <div className=\"SearchResults\">\r\n      <h2>Results</h2>\r\n      <TrackList tracks={this.props.state.searchResults} onAdd={this.props.onAdd} isRemoval={false} />\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResults;","import React from 'react';\r\nimport './Playlist.css';\r\nimport TrackList from '../TrackList/TrackList';\r\n\r\nclass Playlist extends React.Component {\r\nconstructor(props) {\r\n  super(props);\r\n\r\n  this.handleNameChange = this.handleNameChange.bind(this);\r\n}\r\n\r\nhandleNameChange(event) {\r\n this.props.onNameChange(event.target.value);\r\n}\r\n\r\n  render() { \r\n    return (\r\n      <div className=\"Playlist\">\r\n        <input onChange={this.handleNameChange} defaultValue={'New Playlist'}/>\r\n        <TrackList tracks = {this.props.playlistTracks}               isRemoval={true} \r\n            onRemove={this.props.onRemove} />\r\n        <a className=\"Playlist-save\" onClick={this.props.onSave}>SAVE TO SPOTIFY</a>\r\n      </div>\r\n   );\r\n  }\r\n}\r\n\r\nexport default Playlist;","import React from 'react';\nimport './App.css';\n\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\nconstructor(props) {\n  super(props);\n\n  this.state = {\n    searchResults: [],\n    playlistName: 'New Playlist',\n    playlistTracks: []\n  };\n\n  this.addTrack = this.addTrack.bind(this);\n  this.removeTrack = this.removeTrack.bind(this);\n  this.updatePlaylistName = this.updatePlaylistName.bind(this);\n  this.savePlaylist = this.savePlaylist.bind(this);\n  this.search = this.search.bind(this);\n}\n\naddTrack(track) {\n  let tracks = this.state.playlistTracks;\n    tracks.push(track);\n\n    this.setState({playlistTracks: tracks});\n}\n\nremoveTrack(track) {\n  let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(duplicateTrack => duplicateTrack.id !== track.id);\n\n    this.setState({playlistTracks: tracks});\n}\n\nupdatePlaylistName(name) {\n  this.setState({playlistName: name});\n}\n\nsavePlaylist() {\n  const trackUris = this.state.playlistTracks.map(track => track.uri);\n  Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n    this.setState({\n      playlistName: 'New Playlist',\n      playlistTracks: []\n    });\n  });\n}\n\nsearch(term) {\n  Spotify.search(term).then(searchResults => {\n    this.setState({searchResults: searchResults});\n  });\n}\n\nrender() {\n  return (\n    <div>\n      <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n      <div className=\"App\">\n        <SearchBar onSearch={this.search} />\n        <div className=\"App-playlist\">\n          <SearchResults searchResults={this.state.searchResults}\n                         onAdd={this.addTrack} />\n          <Playlist playlistTracks={this.state.playlistTracks}\n                    onNameChange={this.updatePlaylistName}\n                    onRemove={this.removeTrack}\n                    onSave={this.savePlaylist} />\n        </div>\n      </div>\n    </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n\n\n"],"sourceRoot":""}